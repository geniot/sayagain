openapi: 3.0.0
info:
  title: Recipes API
  description: Application which allows users to manage their favourite recipes.
  version: 0.0.1
servers:
  - url: https://localhost/api
    description: Localhost (dev) server
  - url: https://sayagain.app/api
    description: Main (production) server
tags:
  - name: recipe
    description: Everything about your Recipes
  - name: user
    description: Everything about Users
security:
  - bearerAuth: []
paths:

  /users/signin:
    get:
      tags:
        - user
      summary: Sign in with email address and password
      operationId: signin
      parameters:
        - in: header
          name: X-email
          description: Email address
          example: test@test.com
          required: true
          schema:
            type: string
        - in: header
          name: X-password
          description: Password
          example: Somepass-2
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string

  /recipes:
    post:
      security:
        - bearerAuth: []
      tags:
        - recipe
      summary: CREATE - Add a new recipe
      description: Do not use ids for new items.
      operationId: postRecipe
      requestBody:
        description: Recipe
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    put:
      security:
        - bearerAuth: []
      tags:
        - recipe
      summary: UPDATE - Update an existing recipe
      operationId: putRecipe
      requestBody:
        description: Successful operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /recipes/{recipeId}:
    get:
      security:
        - bearerAuth: []
      tags:
        - recipe
      summary: READ - Find recipe by id
      operationId: getRecipe
      parameters:
        - name: recipeId
          in: path
          description: Recipe Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    delete:
      security:
        - bearerAuth: []
      tags:
        - recipe
      summary: DELETE - Delete an existing recipe
      operationId: deleteRecipe
      parameters:
        - name: recipeId
          in: path
          description: Recipe Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /recipes/search:
    post:
      security:
        - bearerAuth: []
      tags:
        - recipe
      summary: FIND - Find recipes by search criteria
      operationId: findRecipes
      requestBody:
        description: Search criteria
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCriteria'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Ingredient:
      title: Ingredient
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: potatoes
    Recipe:
      title: Recipe
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          example: Potato Pancakes
        description:
          type: string
          example: Finely grate potatoes and onion into a large bowl. Drain off any excess liquid.
        servings:
          type: integer
          example: 2
        vegetarian:
          type: boolean
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
    SearchCriteria:
      title: SearchCriteria
      type: object
      properties:
        servings:
          type: integer
          example: 2
        vegetarian:
          type: boolean
        includeIngredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        excludeIngredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        keyword:
          type: string
          example: grill
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string